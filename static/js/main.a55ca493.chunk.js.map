{"version":3,"sources":["index.js"],"names":["App","_useState","useState","_useState2","Object","_tmp_deploys_394tx_cknyeybmq03d50umj3n90bk9z_source_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","books","setBooks","fetchData","_ref","_tmp_deploys_394tx_cknyeybmq03d50umj3n90bk9z_source_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_tmp_deploys_394tx_cknyeybmq03d50umj3n90bk9z_source_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","e","response","wrap","_context","prev","next","disabled","axios","get","sent","data","stop","_x","apply","this","arguments","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","className","onClick","map","book","index","cleanedDate","Date","released","toDateString","authors","join","key","name","role","area-label","numberOfPages","country","rootElement","document","getElementById","ReactDOM","render"],"mappings":"gOAMA,SAASA,IAAM,IAAAC,EACaC,mBAAS,MADtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACCI,EADDJ,EAAA,GAEPK,EAAS,eAAAC,EAAAL,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAChBL,EAAEM,SAAW,OADGH,EAAAE,KAAA,EAEOE,IAAMC,IAC3B,2DAHc,OAEVP,EAFUE,EAAAM,KAMhBjB,EAASS,EAASS,MANF,wBAAAP,EAAAQ,SAAAZ,MAAH,gBAAAa,GAAA,OAAAlB,EAAAmB,MAAAC,KAAAC,YAAA,GASf,OACEC,EAAAnB,EAAAoB,cAAA,OAAKC,UAAU,OACbF,EAAAnB,EAAAoB,cAAA,mCACAD,EAAAnB,EAAAoB,cAAA,qDAGAD,EAAAnB,EAAAoB,cAAA,WACED,EAAAnB,EAAAoB,cAAA,UAAQC,UAAU,eAAeC,QAAS1B,GAA1C,cAGAuB,EAAAnB,EAAAoB,cAAA,YAIFD,EAAAnB,EAAAoB,cAAA,OAAKC,UAAU,SACZ3B,GACCA,EAAM6B,IAAI,SAACC,EAAMC,GACf,IAAMC,EAAc,IAAIC,KAAKH,EAAKI,UAAUC,eACtCC,EAAUN,EAAKM,QAAQC,KAAK,MAElC,OACEZ,EAAAnB,EAAAoB,cAAA,OAAKC,UAAU,OAAOW,IAAKP,GACzBN,EAAAnB,EAAAoB,cAAA,kBAAUK,EAAQ,GAClBN,EAAAnB,EAAAoB,cAAA,UAAKI,EAAKS,MAEVd,EAAAnB,EAAAoB,cAAA,OAAKC,UAAU,WACbF,EAAAnB,EAAAoB,cAAA,SACED,EAAAnB,EAAAoB,cAAA,QAAMc,KAAK,MAAMC,aAAW,OAA5B,gBADF,KAIKL,GAELX,EAAAnB,EAAAoB,cAAA,SACED,EAAAnB,EAAAoB,cAAA,QAAMc,KAAK,MAAMC,aAAW,QAA5B,gBADF,KAIKX,EAAKY,cAJV,UAMAjB,EAAAnB,EAAAoB,cAAA,SACED,EAAAnB,EAAAoB,cAAA,QAAMc,KAAK,MAAMC,aAAW,OAA5B,sBADF,KAIKX,EAAKa,SAEVlB,EAAAnB,EAAAoB,cAAA,SACED,EAAAnB,EAAAoB,cAAA,QAAMc,KAAK,MAAMC,aAAW,QAA5B,UADF,KAIKT,SAWvB,IAAMY,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOvB,EAAAnB,EAAAoB,cAAChC,EAAD,MAASkD","file":"static/js/main.a55ca493.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\n//import ScotchInfoBar from './ScotchInfoBar';\nimport \"./styles.css\";\n\nfunction App() {\n  const [books, setBooks] = useState(null);\n  const fetchData = async (e) => {\n    e.disabled = \"true\";\n    const response = await axios.get(\n      \"https://www.anapioficeandfire.com/api/books?pageSize=30\"\n    );\n\n    setBooks(response.data);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Game of Thrones Books</h1>\n      <h2>Fetch a list from an API and display it</h2>\n\n      {/* Fetch data from API */}\n      <div>\n        <button className=\"fetch-button\" onClick={fetchData}>\n          Fetch Data\n        </button>\n        <br />\n      </div>\n\n      {/* Display data from API */}\n      <div className=\"books\">\n        {books &&\n          books.map((book, index) => {\n            const cleanedDate = new Date(book.released).toDateString();\n            const authors = book.authors.join(\", \");\n\n            return (\n              <div className=\"book\" key={index}>\n                <h3>Book {index + 1}</h3>\n                <h2>{book.name}</h2>\n\n                <div className=\"details\">\n                  <p>\n                    <span role=\"img\" area-label=\"man\">\n                      üë®\n                    </span>\n                    : {authors}\n                  </p>\n                  <p>\n                    <span role=\"img\" area-label=\"book\">\n                      üìñ\n                    </span>\n                    : {book.numberOfPages} pages\n                  </p>\n                  <p>\n                    <span role=\"img\" area-label=\"loc\">\n                      üèòÔ∏è\n                    </span>\n                    : {book.country}\n                  </p>\n                  <p>\n                    <span role=\"img\" area-label=\"date\">\n                      ‚è∞\n                    </span>\n                    : {cleanedDate}\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}